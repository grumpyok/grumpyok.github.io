{"version":3,"sources":["seed/helpers.ts","seed/seeds/users.ts","seed/index.ts","seed/LocalSeederService.ts"],"names":["id","generate","object","type","item","parse","toString","t","USER_1","email","User","lss","then","seeds","resource","LocalStorageService","setItem","Object","values","TokenService","setToken","console","info","seedIndex","localStorageService","currentSeedIndex","getItem","this","seed","window","location","reload","attach","seedIfNeeded"],"mappings":"sGACA,8CAGIA,EAAK,EAMF,SAASC,EAAwCC,EAAoBC,GAC1E,IAAMC,EAAOC,YAASH,EAAQC,GAG9B,OAFAC,EAAKJ,MALKA,GAAIM,WAOPF,I,iCCdT,kDAGeG,EAHf,kBAOaC,GAJED,EAIa,CAC1BE,MAAO,wBAJAR,YAASM,EAAGG,O,6GCDfC,EAAM,I,2HCEV,8FACQ,8BAAkBC,MAAK,SAAAC,GAC3B,IAAK,IAAMC,KAAYD,EAAO,EACA,IAAIE,KAEZC,QAAQF,EAAUG,OAAOC,OAAOL,EAAMC,KAIvC,IAAIK,IAAa,IAAIJ,KAC7BK,SAASZ,SAAOR,IAE7BqB,QAAQC,KAAK,2BAZjB,2C,uHAgBA,WAA0BC,GAA1B,4EACQC,EAAsB,IAAIT,IAC1BU,EAAmBD,EAAoBE,QAAQ,cAAgB,IAEjEH,EAAYE,GAJlB,uBAKIJ,QAAQC,KAAK,qCALjB,SAMUK,KAAKC,OANf,OAOIJ,EAAoBR,QAAQ,YAAaO,GAEzCM,OAAOC,SAASC,SATpB,gD,2EAaA,WAAuB,IAAD,OACnBF,OAAeD,KAAO,kBAAM,EAAKA,Y,MD9BtCjB,EAAIqB,SACJrB,EAAIsB,aALuB","file":"static/js/3.273c6d45.chunk.js","sourcesContent":["import {ClassType} from 'jackson-js/dist/@types'\nimport {parse} from '../util/json'\nimport AbstractDomain from '../domain/AbstractDomain'\n\nlet id = 0\n\nexport function getNextId() {\n  return (++id).toString()\n}\n\nexport function generate<T extends AbstractDomain<any>>(object: Partial<T>, type?: ClassType<T>): T {\n  const item = parse<T>(object, type)\n  item.id = getNextId()\n\n  return item\n}","import User from '../../domain/User'\nimport {generate} from '../helpers'\n\nconst build = (t: Partial<User>): User => {\n  return generate(t, User)\n}\n\nexport const USER_1 = build({\n  email: 'user@awesome.company'\n})","import LocalSeederService from './LocalSeederService'\nconst SEED_INDEX: number = 2 // Increment this when reseeding is necessary\n\nconst lss = new LocalSeederService()\n\nlss.attach()\nlss.seedIfNeeded(SEED_INDEX)","import LocalStorageService from '../services/LocalStorageService'\nimport TokenService from '../services/TokenService'\nimport {USER_1} from './seeds/users'\n\nexport default class LocalSeederService {\n  public async seed(): Promise<void> {\n    await import('./seeds').then(seeds => {\n      for (const resource in seeds) {\n        const localStorageService = new LocalStorageService<object[]>()\n        // @ts-ignore\n        localStorageService.setItem(resource, Object.values(seeds[resource]))\n      }\n\n      // Sets token to make sure user is logged in\n      const tokenService = new TokenService(new LocalStorageService<string>())\n      tokenService.setToken(USER_1.id)\n\n      console.info('Successfully seeded!')\n    })\n  }\n\n  public async seedIfNeeded(seedIndex: number): Promise<void> {\n    const localStorageService = new LocalStorageService<number>()\n    const currentSeedIndex = localStorageService.getItem('seedIndex') || 0\n\n    if (seedIndex > currentSeedIndex) {\n      console.info('Seems like seeding is necessary..')\n      await this.seed()\n      localStorageService.setItem('seedIndex', seedIndex)\n\n      window.location.reload()\n    }\n  }\n\n  public attach(): void {\n    (window as any).seed = () => this.seed()\n  }\n}"],"sourceRoot":""}